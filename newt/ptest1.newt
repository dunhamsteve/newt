module Bug

Nat : U
Nat = (N : U) -> (N -> N) -> N -> N

zero : Nat
zero = \ U s z => z

-- This fails unification if we allow U on the LHS, because U is special on the RHS.
-- We need to not parse it on the LHS if we're not pattern matching.
succ : Nat -> Nat
succ = \ n U s z => s (n U s z)
